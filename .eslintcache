[{"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\index.js":"1","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\App.js":"2","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Cart\\Cart.js":"3","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Shop\\Products.js":"5","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Cart\\CartItem.js":"6","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Layout\\MainHeader.js":"7","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Shop\\ProductItem.js":"8","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\UI\\Card.js":"9","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Cart\\CartButton.js":"10","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\store\\ui-slice.js":"11","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\store\\index.js":"12","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\store\\cart-slice.js":"13","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\UI\\Notification.js":"14"},{"size":292,"mtime":1627073377331,"results":"15","hashOfConfig":"16"},{"size":2401,"mtime":1627166682609,"results":"17","hashOfConfig":"16"},{"size":635,"mtime":1627087970344,"results":"18","hashOfConfig":"16"},{"size":246,"mtime":1627063559715,"results":"19","hashOfConfig":"16"},{"size":873,"mtime":1627083242561,"results":"20","hashOfConfig":"16"},{"size":1164,"mtime":1627088094992,"results":"21","hashOfConfig":"16"},{"size":380,"mtime":1627063559733,"results":"22","hashOfConfig":"16"},{"size":874,"mtime":1627087293142,"results":"23","hashOfConfig":"16"},{"size":257,"mtime":1627063559738,"results":"24","hashOfConfig":"16"},{"size":605,"mtime":1627084147857,"results":"25","hashOfConfig":"16"},{"size":607,"mtime":1627112094430,"results":"26","hashOfConfig":"16"},{"size":250,"mtime":1627081447581,"results":"27","hashOfConfig":"16"},{"size":2693,"mtime":1627160912596,"results":"28","hashOfConfig":"16"},{"size":512,"mtime":1627101268623,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"tdvjsq",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\index.js",[],["60","61"],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\App.js",["62"],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Cart\\Cart.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Shop\\Products.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Layout\\MainHeader.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Shop\\ProductItem.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\UI\\Card.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\Cart\\CartButton.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\store\\ui-slice.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\store\\index.js",[],"C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\store\\cart-slice.js",["63","64"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { uiActions } from './ui-slice';\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n    reducers:{\r\n        addItemToCart(state, action){\r\n            const newItem = action.payload; \r\n            const existingItem = state.items.find( item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n\r\n            const dummy =!existingItem ?  \r\n            (state.items.push({\r\n                id:newItem.id, \r\n                price:newItem.price, \r\n                quantity:1, \r\n                totalPrice:newItem.price,\r\n                name:newItem.title})\r\n                ): (\r\n                    existingItem.quantity++,\r\n                    existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n                );\r\n        },       \r\n        removeItemFromCart(state, action){\r\n            const id = action.payload; \r\n            const existingItem = state.items.find( item => item.id === id);\r\n            state.totalQuantity--;\r\n            // state.changed = true;\r\n            if(existingItem.quantity === 1){\r\n                state.items = state.items.filter( item => item.id !== id);\r\n            }\r\n            else{\r\n                existingItem.quantity--;   \r\n                // existingItem.totalPrice = existingItem.totalPrice - existingItem.price;     \r\n            }\r\n        } \r\n    }\r\n});\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'pending',\r\n          title: 'Sending...',\r\n          message: 'Sending cart data!',\r\n        })\r\n      );\r\n  \r\n      const sendRequest = async () => {\r\n        const url = 'https://react-http-2a442-default-rtdb.firebaseio.com/cart.json';\r\n        const response = await fetch(url,\r\n          {\r\n            method: 'PUT',\r\n            body: JSON.stringify(cart),\r\n          }\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Sending cart data failed.');\r\n        }\r\n      };\r\n  \r\n      try {\r\n        await sendRequest();\r\n  \r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'success',\r\n            title: 'Success!',\r\n            message: 'Sent cart data successfully!'\r\n          })\r\n        );\r\n      } catch (error) {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Sending cart data failed!',\r\n          })\r\n        );\r\n      }\r\n    };\r\n  };\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;","C:\\Users\\JMAT\\AtomProjects\\react-complete-guide-code\\src\\components\\UI\\Notification.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":9,"column":10,"nodeType":"71","messageId":"72","endLine":9,"endColumn":19},{"ruleId":"69","severity":1,"message":"73","line":16,"column":19,"nodeType":"71","messageId":"72","endLine":16,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":24,"column":44,"nodeType":"76","messageId":"77","endLine":24,"endColumn":45},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'uiActions' is defined but never used.","Identifier","unusedVar","'dummy' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]